Programovací jazyk je prostředek pro zápis algoritmů, jež mohou být provedeny na počítači. Zápis algoritmu ve zvoleném programovacím jazyce se nazývá program.
Programovací jazyk je komunikačním nástrojem mezi programátorem, který v programovacím jazyce formuluje postup řešení daného problému, a počítačem, který program interpretuje technickými prostředky. Programovací jazyk je vlastně soubor pravidel pro zápis algoritmu, odborně řečeno se jedná o formální jazyk.
Programovací jazyky existují v řadě verzí a implementací, mluvíme někdy o dialektech programovacího jazyka. Existují také standardy pro programovací jazyky, pro jednotlivé implementace se často uvádí, kterému standardu vyhovuje.
nižší programovací jazyky (např. jazyk symbolických adres, částečně VHDL)Dle způsobu překladu a spuštění:
interpretované jazyky, které se pouze interpretují (z toho důvodu jsou pomalejší – proto většina jazyků má alespoň nějakou jinou možnost, pokud nejsou stejně zpomalované něčím jiným, jako třeba shell)
interpretované jazyky, které se překládají, ale pouze do mezikódu, nikoli do strojového kódu počítače (např. Java, Python)
interpretované jazyky, které se po spuštění za běhu programu překládají do strojového kódu počítače (např. Java, pokud se použije systém JIT)Toto členění není absolutní, řada programovacích jazyků existuje v implementaci jak interpretované, tak kompilované (například zmíněná Java). Navíc jsou oba postupy někdy kombinovány, zdrojový kód je nejprve kompilován do mezikódu, který je poté interpretován.
Logické (např. Prolog, Gödel)Některé programovací jazyky (např. C++, Python, Object Pascal, Rust, Flex) umožňují programátorovi kombinovat různé přístupy. Část řešení může být například vyjádřena zápisem funkcí a procedur (strukturované programování), část řešení může využívat čistě objektový přístup. Klasickým příkladem jazyka, ve kterém se mezi těmito přístupy nedělá ostrá hranice, je jazyk C++. Podobný pragmatický přístup využívá jazyk Python, který navíc do určité míry podporuje i funkcionální programování. Jako protiklad k nim uveďme velmi rozšířený jazyk Java, kde se i jednoduchá funkce musí vyjádřit formou metody třídy.
Některé programovací jazyky byly vytvořeny především pro výuku programování a algoritmického myšlení. Mezi takové jazyky patří například Logo, Karel, Baltík, Petr; ostatně prvotním důvodem vzniku jazyka Pascal byla také výuka programování.
První programovací jazyky existovaly ještě dříve než počítače. Už v 19. století se používaly programovatelné tkalcovské stavy nebo perforované papírové válce pro samohrající piána, které implementovaly to, co bychom dnes rozeznali jako vzory doménově orientovaných programovacích jazyků. Začátkem dvacátého století se již data uchovávala pomocí děrných štítků.
V třicátých a čtyřicátých letech byl definován lambda kalkul (Alonzo Church) a turingův stroj (Alan Turing), což poskytlo matematický základ pro vyjádření definice algoritmu. Po roce 1940 byly vytvořeny první elektricky napájené digitální počítače, přičemž první vyšší programovací jazyk Plankalkül byl vytvořen pro německý počítač Z3 Konrada Zuse.
Následuje seznam programů a nástrojů, které nejsou obvykle přímo označovány jako programovací jazyky, ale přesto mají s programovacími jazyky mnoho společného. Většinou jde o komplexní systémy, jejichž účelem je něco jiného (sazba textu, kreslení obrázků, interakce uživatele s operačním systémem…) a programování slouží převážně k jeho lepšímu ovládnutí.
http://merd.sourceforge.net/pixel/language-study/syntax-across-languages.html – rozdíly v syntaxi běžných (i méně běžných) jazyků (anglicky)
http://www.root.cz/zpravicky/c-je-nejvyznamnejsim-jazykem-roku-2016-tvrdi-studie-ieee/ - C je nejvýznamnějším jazykem roku 2016, tvrdí studie IEEE (česky)
