"""
List all possible kerning pairs combinatorial. 
Specifying possible kerning for each character's shape via numbers.
1, 0, -1 represents outside, normal, inside
For 5 vertical positions: ascender, x-height, middle-lower-case, baseline, descender
This might be the minimum resolution to represent common (sans-serif) typedesigns. 
You can expand this schema to any resolution you might need to represent 
more complex (serif) typedesigns.
This scripts generates SVG vector graphics to visualize the specifications. 
"""

import svgwrite
import operator
import os
import json
from tqdm import tqdm


# https://en.wikipedia.org/wiki/List_of_Unicode_characters#Basic_Latin
letters = {
    ' ': ((-1, -1, -1, -1, -1), (-1, -1, -1, -1, -1)),  # 32
    '!': ((0, 0, 0, 0, -1), (0, 0, 0, 0, -1)),  # 33
    '"': ((1, 1, -1, -1, -1), (1, 1, -1, -1, -1)),  # 34
    '#': ((-1, -1, 1, -1, -1), (-1, 1, -1, -1, -1)),  # 35
    '$': ((-1, 0, 0, -1, -1), (-1, 0, 0, -1, -1)),  # 36
    '%': ((-1, 1, -1, 1, -1), (1, -1, 1, -1, -1)),  # 37
    '&': ((-1, -1, 1, -1, -1), (-1, -1, 1, 1, -1)),  # 38
    "'": ((1, 1, -1, -1, -1), (1, 1, -1, -1, -1)),  # 39
    '(': ((-1, 1, 1, 1, -1), (1, -1, -1, -1, 1)),  # 40
    ')': ((1, -1, -1, -1, 1), (-1, 1, 1, 1, -1)),  # 41
    '*': ((1, -1, -1, -1, -1), (1, -1, -1, -1, -1)),  # 42
    '+': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 43
    ',': ((-1, -1, -1, 1, 1), (-1, -1, -1, 1, 1)),  # 44
    '-': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 45
    '.': ((-1, -1, -1, 1, -1), (-1, -1, -1, 1, -1)),  # 46
    '/': ((-1, -1, -1, 1, -1), (1, -1, -1, -1, -1)),  # 47

    '0': ((-1, 0, 0, -1, -1), (-1, 0, 0, -1, -1)),  # 48
    '1': ((-1, 1, -1, -1, -1), (0, 0, 0, 0, -1)),  # 49
    '2': ((-1, 1, -1, 1, -1), (-1, 1, -1, 1, -1)),  # 50
    '3': ((-1, -1, -1, -1, -1), (-1, 0, 0, -1, -1)),  # 51
    '4': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 52
    '5': ((0, 0, -1, 1, -1), (1, -1, 1, -1, -1)),  # 53
    '6': ((-1, 0, 0, -1, -1), (-1, -1, 1, -1, -1)),  # 54
    '7': ((1, -1, -1, -1, -1), (1, -1, -1, -1, -1)),  # 55
    '8': ((-1, 0, 0, -1, -1), (-1, 0, 0, -1, -1)),  # 56
    '9': ((-1, 1, -1, -1, -1), (-1, 0, 0, -1, -1)),  # 57

    ':': ((-1, 1, -1, 1, -1), (-1, 1, -1, 1, -1)),  # 58
    ';': ((-1, 1, -1, 1, 1), (-1, 1, -1, 1, 1)),  # 59
    '<': ((-1, -1, 1, -1, -1), (-1, 1, -1, 1, -1)),  # 60
    '=': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 61
    '>': ((-1, 1, -1, 1, -1), (-1, -1, 1, -1, -1)),  # 62
    '?': ((-1, -1, -1, -1, -1), (-1, 1, -1, -1, -1)),  # 63
    '@': ((-1, 1, 1, -1, -1), (-1, 1, 1, -1, -1)),  # 64

    'A': ((-1, -1, -1, 1, -1), (-1, -1, -1, 1, -1)),
    'B': ((0, 0, 0, 0, -1), (-1, -1, 1, -1, -1)),
    'C': ((-1, 1, 1, -1, -1), (-1, -1, -1, -1, -1)),
    'D': ((0, 0, 0, 0, -1), (-1, 1, 1, -1, -1)),
    'E': ((0, 0, 0, 0, -1), (1, 1, -1, 1, -1)),
    'F': ((0, 0, 0, 0, -1), (1, 1, -1, -1, -1)),
    'G': ((-1, 1, 1, -1, -1), (-1, 0, 0, 0, -1)),
    'H': ((0, 0, 0, 0, -1), (0, 0, 0, 0, -1)),
    'I': ((0, 0, 0, 0, -1), (0, 0, 0, 0, -1)),
    'J': ((-1, -1, -1, 1, -1), (0, 0, 0, -1, -1)),
    'K': ((0, 0, 0, 0, -1), (1, -1, -1, 1, -1)),
    'L': ((0, 0, 0, 0, -1), (-1, -1, -1, 1, -1)),
    'M': ((0, 0, 0, 0, -1), (0, 0, 0, 0, -1)),
    'N': ((0, 0, 0, 0, -1), (0, 0, 0, 0, -1)),
    'O': ((-1, 1, 1, -1, -1), (-1, 1, 1, -1, -1)),
    'P': ((0, 0, 0, 0, -1), (-1, 1, -1, -1, -1)),
    'Q': ((-1, 1, 1, -1, -1), (-1, 1, 1, 1, -1)),
    'R': ((0, 0, 0, 0, -1), (-1, 1, -1, 1, -1)),
    'S': ((-1, 0, 0, -1, -1), (-1, 0, 0, -1, -1)),
    'T': ((1, -1, -1, -1, -1), (1, -1, -1, -1, -1)),
    'U': ((0, 0, 0, -1, -1), (0, 0, 0, -1, -1)),
    'V': ((1, -1, -1, -1, -1), (1, -1, -1, -1, -1)),
    'W': ((1, -1, -1, -1, -1), (1, -1, -1, -1, -1)),
    'X': ((1, -1, -1, 1, -1), (1, -1, -1, 1, -1)),
    'Y': ((1, -1, -1, -1, -1), (1, -1, -1, -1, -1)),
    'Z': ((1, -1, -1, 1, -1), (1, -1, -1, 1, -1)),

    '[': ((0, 0, 0, 0, 0), (0, -1, -1, -1, 0)),  # 91
    '\\': ((1, -1, -1, -1, -1), (-1, -1, -1, 1, -1)),  # 92
    ']': ((0, -1, -1, -1, 0), (0, 0, 0, 0, 0)),  # 93
    'ˆ': ((-1, 1, -1, -1, -1), (-1, 1, -1, -1, -1)),  # 94
    '_': ((-1, -1, -1, -1, 1), (-1, -1, -1, -1, 1)),  # 95
    '`': ((1, -1, -1, -1, -1), (1, -1, -1, -1, -1)),  # 96

    'a': ((-1, -1, 0, -1, -1), (-1, -1, 0, 0, -1)),
    'b': ((0, 0, 0, 0, -1), (-1, -1, 1, -1, -1)),
    'c': ((-1, -1, 1, -1, -1), (-1, -1, -1, -1, -1)),
    'd': ((-1, -1, 1, -1, -1), (0, 0, 0, 0, -1)),
    'e': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),
    'f': ((-1, 1, -1, -1, -1), (1, 1, -1, -1, -1)),
    'g': ((-1, -1, 1, 0, -1), (-1, 0, 0, 0, -1)),
    'i': ((0, 0, 0, 0, -1), (0, 0, 0, 0, -1)),
    'j': ((0, 0, 0, 0, 1), (0, 0, 0, 0, -1)),
    'k': ((0, 0, 0, 0, -1), (-1, 0, -1, 0, -1)),
    'l': ((0, 0, 0, 0, -1), (0, 0, 0, 0, -1)),
    'm': ((-1, 0, 0, 0, -1), (-1, -1, 0, 0, -1)),
    'n': ((-1, 0, 0, 0, -1), (-1, -1, 0, 0, -1)),
    'o': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),
    'p': ((-1, 0, 0, 0, 0), (-1, -1, 1, -1, -1)),
    'q': ((-1, -1, 1, -1, -1), (-1, 0, 0, 0, 0)),
    'r': ((-1, 0, 0, 0, -1), (-1, 1, -1, -1, -1)),
    's': ((-1, -1, 0, -1, -1), (-1, -1, 0, -1, -1)),
    't': ((-1, 1, -1, -1, -1), (-1, 1, -1, 1, -1)),
    'u': ((-1, 0, 0, -1, -1), (-1, 0, 0, 0, -1)),
    'v': ((-1, 1, -1, -1, -1), (-1, 1, -1, -1, -1)),
    'w': ((-1, 1, -1, -1, -1), (-1, 1, -1, -1, -1)),
    'x': ((-1, 1, -1, 1, -1), (-1, 1, -1, 1, -1)),
    'y': ((-1, 1, -1, -1, 1), (-1, 1, -1, -1, -1)),
    'z': ((-1, 1, -1, 1, -1), (-1, 1, -1, 1, -1)),

    '{': ((-1, 0, 1, 0, -1), (1, -1, -1, -1, 1)),  # 123
    '|': ((0, 0, 0, 0, -1), (0, 0, 0, 0, -1)),  # 124
    '}': ((1, -1, -1, -1, 1), (-1, 0, 1, 0, -1)),  # 125
    '~': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 126

    'À': ((-1, -1, -1, 1, -1), (-1, -1, -1, 1, -1)),  # 192
    'Á': ((-1, -1, -1, 1, -1), (-1, -1, -1, 1, -1)),  # 193
    'Â': ((-1, -1, -1, 1, -1), (-1, -1, -1, 1, -1)),  # 194
    'Ã': ((-1, -1, -1, 1, -1), (-1, -1, -1, 1, -1)),  # 195
    'Ä': ((-1, -1, -1, 1, -1), (-1, -1, -1, 1, -1)),  # 196
    'Å': ((-1, -1, -1, 1, -1), (-1, -1, -1, 1, -1)),  # 197
    'Æ': ((-1, -1, -1, 1, -1), (1, 1, -1, 1, -1)),  # 198
    'Ç': ((-1, 1, 1, -1, -1), (-1, -1, -1, -1, -1)),  # 199
    'È': ((0, 0, 0, 0, -1), (1, 1, -1, 1, -1)),  # 200
    'É': ((0, 0, 0, 0, -1), (1, 1, -1, 1, -1)),  # 201
    'Ê': ((0, 0, 0, 0, -1), (1, 1, -1, 1, -1)),  # 202
    'Ë': ((0, 0, 0, 0, -1), (1, 1, -1, 1, -1)),  # 203
    'Ì': ((1, 0, 0, 0, -1), (1, 0, 0, 0, -1)),  # 204
    'Í': ((1, 0, 0, 0, -1), (1, 0, 0, 0, -1)),  # 205
    'Î': ((1, 0, 0, 0, -1), (1, 0, 0, 0, -1)),  # 206
    'Ï': ((1, 0, 0, 0, -1), (1, 0, 0, 0, -1)),  # 207
    'Ð': ((0, 1, 0, 0, -1), (-1, 1, 1, -1, -1)),  # 208
    'Ñ': ((0, 0, 0, 0, -1), (0, 0, 0, 0, -1)),  # 209
    'Ò': ((-1, 1, 1, -1, -1), (-1, 1, 1, -1, -1)),  # 210
    'Ó': ((-1, 1, 1, -1, -1), (-1, 1, 1, -1, -1)),  # 211
    'Ô': ((-1, 1, 1, -1, -1), (-1, 1, 1, -1, -1)),  # 212
    'Õ': ((-1, 1, 1, -1, -1), (-1, 1, 1, -1, -1)),  # 213
    'Ö': ((-1, 1, 1, -1, -1), (-1, 1, 1, -1, -1)),  # 214
    '×': ((-1, 1, -1, 1, -1), (-1, 1, -1, 1, -1)),  # 215
    'Ø': ((-1, 1, 1, 1, -1), (1, 1, 1, -1, -1)),  # 216
    'Ù': ((0, 0, 0, -1, -1), (0, 0, 0, -1, -1)),  # 217
    'Ú': ((0, 0, 0, -1, -1), (0, 0, 0, -1, -1)),  # 218
    'Û': ((0, 0, 0, -1, -1), (0, 0, 0, -1, -1)),  # 219
    'Ü': ((0, 0, 0, -1, -1), (0, 0, 0, -1, -1)),  # 220
    'Ý': ((1, -1, -1, -1, -1), (1, -1, -1, -1, -1)),  # 221
    'Þ': ((0, 0, 0, 0, -1), (-1, 1, -1, -1, -1)),  # 222

    'ß': ((-1, 0, 0, 0, -1), (-1, -1, 1, -1, -1)),  # 223
    'à': ((-1, -1, 0, -1, -1), (-1, -1, 0, 0, -1)),  # 224
    'á': ((-1, -1, 0, -1, -1), (-1, -1, 0, 0, -1)),  # 225
    'â': ((-1, -1, 0, -1, -1), (-1, -1, 0, 0, -1)),  # 226
    'ã': ((0, -1, 0, -1, -1), (0, -1, 0, 0, -1)),  # 227
    'ä': ((0, -1, 0, -1, -1), (0, -1, 0, 0, -1)),  # 228
    'å': ((-1, -1, 0, -1, -1), (-1, -1, 0, 0, -1)),  # 229
    'æ': ((-1, -1, 0, -1, -1), (-1, -1, 1, -1, -1)),  # 230
    'ç': ((-1, -1, 1, -1, -1), (-1, -1, -1, -1, -1)),  # 231
    'è': ((0, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 232
    'é': ((-1, -1, 1, -1, -1), (0, -1, 1, -1, -1)),  # 233
    'ê': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 234
    'ë': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 235
    'ì': ((1, 0, 0, 0, -1), (0, 0, 0, 0, -1)),  # 236
    'í': ((0, 0, 0, 0, -1), (1, 0, 0, 0, -1)),  # 237
    'î': ((1, 0, 0, 0, -1), (1, 0, 0, 0, -1)),  # 238
    'ï': ((1, 0, 0, 0, -1), (1, 0, 0, 0, -1)),  # 239
    'ð': ((0, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 240
    'ñ': ((0, 0, 0, 0, -1), (0, -1, 0, 0, -1)),  # 241
    'ò': ((0, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 242
    'ó': ((-1, -1, 1, -1, -1), (0, -1, 1, -1, -1)),  # 243
    'ô': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 244
    'õ': ((0, -1, 1, -1, -1), (0, -1, 1, -1, -1)),  # 245
    'ö': ((0, -1, 1, -1, -1), (0, -1, 1, -1, -1)),  # 246
    '÷': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 247
    'ø': ((-1, -1, 1, 1, -1), (-1, 1, 1, -1, -1)),  # 248
    'ù': ((0, 0, 0, -1, -1), (-1, 0, 0, 0, -1)),  # 249
    'ú': ((-1, 0, 0, -1, -1), (0, 0, 0, 0, -1)),  # 250
    'û': ((0, 0, 0, -1, -1), (0, 0, 0, 0, -1)),  # 251
    'ü': ((0, 0, 0, -1, -1), (0, 0, 0, 0, -1)),  # 252
    'ý': ((-1, 1, -1, -1, 1), (0, 1, -1, -1, -1)),  # 253
    'þ': ((0, 0, 0, 0, 0), (-1, -1, 1, -1, -1)),  # 254
    'ÿ': ((0, 1, -1, -1, 1), (0, 1, -1, -1, -1)),  # 255

    'Ā': ((-1, -1, -1, 1, -1), (-1, -1, -1, 1, -1)),  # 256
    'ā': ((0, -1, 0, -1, -1), (0, -1, 0, 0, -1)),  # 257
    'Ă': ((-1, -1, -1, 1, -1), (-1, -1, -1, 1, -1)),  # 258
    'ă': ((0, -1, 0, -1, -1), (0, -1, 0, 0, -1)),  # 259
    'Ą': ((-1, -1, -1, 1, -1), (-1, -1, -1, 1, 1)),  # 260
    'ą': ((-1, -1, 0, -1, -1), (-1, -1, 0, 0, 0)),  # 261
    'Ć': ((-1, 1, 1, -1, -1), (-1, -1, -1, -1, -1)),  # 262
    'ć': ((-1, -1, 1, -1, -1), (-1, -1, -1, -1, -1)),  # 263
    'Ĉ': ((-1, 1, 1, -1, -1), (-1, -1, -1, -1, -1)),  # 264
    'ĉ': ((-1, -1, 1, -1, -1), (-1, -1, -1, -1, -1)),  # 265
    'Ċ': ((-1, 1, 1, -1, -1), (-1, -1, -1, -1, -1)),  # 266
    'ċ': ((-1, -1, 1, -1, -1), (-1, -1, -1, -1, -1)),  # 267
    'Č': ((-1, 1, 1, -1, -1), (-1, -1, -1, -1, -1)),  # 268
    'č': ((-1, -1, 1, -1, -1), (-1, -1, -1, -1, -1)),  # 269
    'Ď': ((0, 0, 0, 0, -1), (-1, 1, 1, -1, -1)),  # 270
    'ď': ((-1, -1, 1, -1, -1), (1, 0, 0, 0, -1)),  # 271
    'Đ': ((0, 1, 0, 0, -1), (-1, 1, 1, -1, -1)),  # 272
    'đ': ((-1, -1, 1, -1, -1), (1, 0, 0, 0, -1)),  # 273
    'Ē': ((0, 0, 0, 0, -1), (1, 1, -1, 1, -1)),  # 274
    'ē': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 275
    'Ĕ': ((0, 0, 0, 0, -1), (1, 1, -1, 1, -1)),  # 276
    'ĕ': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 277
    'Ė': ((0, 0, 0, 0, -1), (1, 1, -1, 1, -1)),  # 278
    'ė': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 279
    'Ę': ((0, 0, 0, 0, -1), (1, 1, -1, 1, -1)),  # 280
    'ę': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 281
    'Ě': ((0, 0, 0, 0, -1), (1, 1, -1, 1, -1)),  # 282
    'ě': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 283
    'Ĝ': ((-1, 1, 1, -1, -1), (-1, 0, 0, 0, -1)),  # 284
    'ĝ': ((-1, -1, 1, 0, -1), (-1, 0, 0, 0, -1)),  # 285
    'Ğ': ((-1, 1, 1, -1, -1), (-1, 0, 0, 0, -1)),  # 286
    'ğ': ((-1, -1, 1, 0, -1), (-1, 0, 0, 0, -1)),  # 287
    'Ġ': ((-1, 1, 1, -1, -1), (-1, 0, 0, 0, -1)),  # 288
    'ġ': ((-1, -1, 1, 0, -1), (-1, 0, 0, 0, -1)),  # 289
    'Ģ': ((-1, 1, 1, -1, -1), (-1, 0, 0, 0, -1)),  # 290
    'ģ': ((-1, -1, 1, 0, -1), (-1, 0, 0, 0, -1)),  # 291
    'Ĥ': ((0, 0, 0, 0, -1), (0, 0, 0, 0, -1)),  # 292
    'ĥ': ((0, 0, 0, 0, -1), (-1, -1, 0, 0, -1)),  # 293
    'Ħ': ((1, 0, 0, 0, -1), (1, 0, 0, 0, -1)),  # 294
    'ħ': ((1, 0, 0, 0, -1), (-1, -1, 0, 0, -1)),  # 295
    'Ĩ': ((1, 0, 0, 0, -1), (1, 0, 0, 0, -1)),  # 296
    'ĩ': ((1, 0, 0, 0, -1), (1, 0, 0, 0, -1)),  # 297
    'Ī': ((1, 0, 0, 0, -1), (1, 0, 0, 0, -1)),  # 298
    'ī': ((1, 0, 0, 0, -1), (1, 0, 0, 0, -1)),  # 299
    'Ĭ': ((1, 0, 0, 0, -1), (1, 0, 0, 0, -1)),  # 300
    'ĭ': ((1, 0, 0, 0, -1), (1, 0, 0, 0, -1)),  # 301
    'Į': ((0, 0, 0, 0, 1), (0, 0, 0, 0, 0)),  # 302
    'į': ((0, 0, 0, 0, 1), (0, 0, 0, 0, 0)),  # 303
    'İ': ((1, 0, 0, 0, -1), (1, 0, 0, 0, -1)),  # 304
    'ı': ((-1, 0, 0, 0, -1), (-1, 0, 0, 0, -1)),  # 305
    'Ĳ': ((0, 0, 0, 0, -1), (0, 0, 0, -1, -1)),  # 306
    'ĳ': ((0, 0, 0, 0, -1), (0, 0, 0, 0, -1)),  # 307
    'Ĵ': ((-1, -1, -1, 1, -1), (0, 0, 0, -1, -1)),  # 308
    'ĵ': ((1, 0, 0, 0, 1), (1, 0, 0, 0, -1)),  # 309
    'Ķ': ((0, 0, 0, 0, -1), (1, -1, -1, 1, -1)),  # 310
    'ķ': ((0, 0, 0, 0, -1), (-1, 0, -1, 0, -1)),  # 311
    'ĸ': ((0, 0, 0, 0, -1), (-1, 0, -1, 0, -1)),  # 312
    'Ĺ': ((0, 0, 0, 0, -1), (-1, -1, -1, 1, -1)),  # 313
    'ĺ': ((0, 0, 0, 0, -1), (0, 0, 0, 0, -1)),  # 314
    'Ļ': ((0, 0, 0, 0, -1), (-1, -1, -1, 1, -1)),  # 315
    'ļ': ((0, 0, 0, 0, 1), (0, 0, 0, 0, 1)),  # 316
    'Ľ': ((0, 0, 0, 0, -1), (1, -1, -1, 1, -1)),  # 317
    'ľ': ((0, 0, 0, 0, -1), (1, 1, 0, 0, -1)),  # 318
    'Ŀ': ((0, 0, 0, 0, -1), (-1, 1, -1, 1, -1)),  # 319
    'ŀ': ((0, 0, 0, 0, -1), (0, 1, 0, 0, -1)),  # 320
    'Ł': ((0, 0, 1, 0, -1), (-1, -1, -1, 1, -1)),  # 321
    'ł': ((0, 0, 1, 0, -1), (0, 1, 0, 0, -1)),  # 322
    'Ń': ((0, 0, 0, 0, -1), (0, 0, 0, 0, -1)),  # 323
    'ń': ((-1, 0, 0, 0, -1), (-1, -1, 0, 0, -1)),  # 324
    'Ņ': ((0, 0, 0, 0, -1), (0, 0, 0, 0, -1)),  # 325
    'ņ': ((-1, 0, 0, 0, -1), (-1, -1, 0, 0, -1)),  # 326
    'Ň': ((0, 0, 0, 0, -1), (0, 0, 0, 0, -1)),  # 327
    'ň': ((-1, 0, 0, 0, -1), (-1, -1, 0, 0, -1)),  # 328
    'ŉ': ((1, 0, 0, 0, -1), (-1, -1, 0, 0, -1)),  # 329, deprecated
    'Ŋ': ((0, 0, 0, 0, -1), (0, 0, 0, 0, 0)),  # 330
    'ŋ': ((-1, 0, 0, 0, -1), (-1, -1, 0, 0, 0)),  # 331
    'Ō': ((-1, 1, 1, -1, -1), (-1, 1, 1, -1, -1)),  # 332
    'ō': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 333
    'Ŏ': ((-1, 1, 1, -1, -1), (-1, 1, 1, -1, -1)),  # 334
    'ŏ': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 335
    'Ő': ((-1, 1, 1, -1, -1), (-1, 1, 1, -1, -1)),  # 336
    'ő': ((-1, -1, 1, -1, -1), (0, -1, 1, -1, -1)),  # 337
    'Œ': ((-1, 1, 1, -1, -1), (1, 1, -1, 1, -1)),  # 338
    'œ': ((-1, -1, 1, -1, -1), (-1, -1, 1, -1, -1)),  # 339
    'Ŕ': ((0, 0, 0, 0, -1), (-1, 1, -1, 1, -1)),  # 340
    'ŕ': ((-1, 0, 0, 0, -1), (-1, 1, -1, -1, -1)),  # 341
    'Ŗ': ((0, 0, 0, 0, -1), (-1, 1, -1, 1, -1)),  # 342
    'ŗ': ((-1, 0, 0, 0, 1), (-1, 1, -1, -1, -1)),  # 343
    'Ř': ((0, 0, 0, 0, -1), (-1, 1, -1, 1, -1)),  # 344
    'ř': ((-1, 0, 0, 0, -1), (-1, 1, -1, -1, -1)),  # 345
    'Ś': ((-1, 0, 0, -1, -1), (-1, 0, 0, -1, -1)),  # 346
    'ś': ((-1, -1, 0, -1, -1), (0, -1, 0, -1, -1)),  # 347
    'Ŝ': ((-1, 0, 0, -1, -1), (-1, 0, 0, -1, -1)),  # 348
    'ŝ': ((-1, -1, 0, -1, -1), (-1, -1, 0, -1, -1)),  # 349
    'Ş': ((-1, 0, 0, -1, -1), (-1, 0, 0, -1, -1)),  # 350
    'ş': ((-1, -1, 0, -1, -1), (-1, -1, 0, -1, -1)),  # 351
    'Š': ((-1, 0, 0, -1, -1), (-1, 0, 0, -1, -1)),  # 352
    'š': ((0, -1, 0, -1, -1), (0, -1, 0, -1, -1)),  # 353
    'Ţ': ((1, -1, -1, -1, -1), (1, -1, -1, -1, -1)),  # 354
    'ţ': ((-1, 1, -1, -1, -1), (-1, 1, -1, 1, -1)),  # 355
    'Ť': ((1, -1, -1, -1, -1), (1, -1, -1, -1, -1)),  # 356
    'ť': ((-1, 1, -1, -1, -1), (1, 1, -1, 1, -1)),  # 357
    'Ŧ': ((1, -1, -1, -1, -1), (1, -1, -1, -1, -1)),  # 358
    'ŧ': ((-1, 1, -1, -1, -1), (-1, 1, 1, 1, -1)),  # 359
    'Ũ': ((0, 0, 0, -1, -1), (0, 0, 0, -1, -1)),  # 360
    'ũ': ((-1, 0, 0, -1, -1), (-1, 0, 0, 0, -1)),  # 361
    'Ū': ((0, 0, 0, -1, -1), (0, 0, 0, -1, -1)),  # 362
    'ū': ((-1, 0, 0, -1, -1), (-1, 0, 0, 0, -1)),  # 363
    'Ŭ': ((0, 0, 0, -1, -1), (0, 0, 0, -1, -1)),  # 364
    'ŭ': ((-1, 0, 0, -1, -1), (-1, 0, 0, 0, -1)),  # 365
    'Ů': ((0, 0, 0, -1, -1), (0, 0, 0, -1, -1)),  # 366
    'ů': ((-1, 0, 0, -1, -1), (-1, 0, 0, 0, -1)),  # 367
    'Ű': ((0, 0, 0, -1, -1), (0, 0, 0, -1, -1)),  # 368
    'ű': ((-1, 0, 0, -1, -1), (-1, 0, 0, 0, -1)),  # 369
    'Ų': ((0, 0, 0, -1, -1), (0, 0, 0, -1, -1)),  # 370
    'ų': ((-1, 0, 0, -1, -1), (-1, 0, 0, 0, 1)),  # 371
    'Ŵ': ((1, -1, -1, -1, -1), (1, -1, -1, -1, -1)),  # 372
    'ŵ': ((-1, 1, -1, -1, -1), (-1, 1, -1, -1, -1)),  # 373
    'Ŷ': ((1, -1, -1, -1, -1), (1, -1, -1, -1, -1)),  # 374
    'ŷ': ((-1, 1, -1, -1, 1), (-1, 1, -1, -1, -1)),  # 375
    'Ÿ': ((1, -1, -1, -1, -1), (1, -1, -1, -1, -1)),  # 376
    'Ź': ((1, -1, -1, 1, -1), (1, -1, -1, 1, -1)),  # 377
    'ź': ((-1, 1, -1, 1, -1), (-1, 1, -1, 1, -1)),  # 378
    'Ż': ((1, -1, -1, 1, -1), (1, -1, -1, 1, -1)),  # 379
    'ż': ((-1, 1, -1, 1, -1), (-1, 1, -1, 1, -1)),  # 380
    'Ž': ((1, -1, -1, 1, -1), (1, -1, -1, 1, -1)),  # 381
    'ž': ((-1, 1, -1, 1, -1), (-1, 1, -1, 1, -1)),  # 382
    'ſ': ((-1, 1, -1, -1, -1), (1, -1, -1, -1, -1)),  # 383

    '«': ((-1, -1, 1, -1, -1), (-1, 1, -1, 1, -1)),  # 171
    '»': ((-1, 1, -1, 1, -1), (-1, -1, 1, -1, -1)), # 187
    '‘': ((1, 1, -1, -1, -1), (1, 1, -1, -1, -1)),  # 8216
    '’': ((1, 1, -1, -1, -1), (1, 1, -1, -1, -1)),  # 8217
    '‚': ((-1, -1, -1, 1, 1), (-1, -1, -1, 1, 1)), # 8218
    '‛': ((1, 1, -1, -1, -1), (1, 1, -1, -1, -1)),  # 8219
    '“': ((1, 1, -1, -1, -1), (1, 1, -1, -1, -1)),  # 8220
    '”': ((1, 1, -1, -1, -1), (1, 1, -1, -1, -1)), # 8221
    '„': ((-1, -1, -1, 1, 1), (-1, -1, -1, 1, 1)), # 8222
    '‟': ((1, 1, -1, -1, -1), (1, 1, -1, -1, -1)),  # 8223
    '‹': ((-1, -1, 1, -1, -1), (-1, 1, -1, 1, -1)),  # 8249
    '›': ((-1, 1, -1, 1, -1), (-1, -1, 1, -1, -1)), # 8250
}

# Generate SVGs
for letter, shapes in tqdm(letters.items()):
    dwg = svgwrite.Drawing('shapes/' + str(ord(letter)) + '.svg', size=('16', '16'))
    for y in [0, 4, 8, 12, 16]:
        dwg.add(dwg.line((0, y), (16, y), stroke='gray', stroke_width=".2"))

    dwg.add(dwg.polygon(
        zip(tuple(map(lambda x: x * -2 + 2, shapes[0])) + (2, 2), (0, 4, 8, 12, 16) + (16, 0)),
        stroke='red', fill='red', stroke_width=".2"))

    dwg.add(dwg.polygon(
        zip(tuple(map(lambda x: x * 2 + 14, shapes[1])) + (14, 14), (0, 4, 8, 12, 16) + (16, 0)),
        stroke='red', fill='red', stroke_width=".2"))
    # dwg.add(dwg.text(letter, insert=(8, 8), fill='red'))

    g = dwg.g(style="font-size: 16; font-family: Helvetica;")
    g.add(dwg.text(letter, insert=(4,12))) # settings are valid for all text added to 'g'
    dwg.add(g)

    dwg.save()


# List all possible kerning pairs
kerningPairs = []
for (leftLetter, leftShapes) in tqdm(letters.items()):
    for rightLetter, rightShapes in letters.items():
        sum = tuple(map(operator.add, leftShapes[1], rightShapes[0]))
        if all(x <= 0 for x in sum) and (any(x > 0 for x in leftShapes[1]) or any(x > 0 for x in rightShapes[0])):
            kerningPairs.append(leftLetter + rightLetter)

with open('shapes/01_potential_kerning_pairs.json', 'w', encoding='utf8') as file: 
    file.write(json.dumps(kerningPairs, indent=4, ensure_ascii=False))

print(len(kerningPairs), 'Potential Kerning Pairs')
